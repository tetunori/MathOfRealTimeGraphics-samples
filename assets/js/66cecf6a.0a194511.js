"use strict";(self.webpackChunkMathOfRealTimeGraphics_samples=self.webpackChunkMathOfRealTimeGraphics_samples||[]).push([[9295],{11201:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>_,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=t(87462),a=(t(67294),t(3905)),c=t(72915);const i={sidebar_position:1},o="7_0_circle",s={unversionedId:"chapter7/7_0_circle",id:"chapter7/7_0_circle",title:"7_0_circle",description:"\u56f3 7.2, \u30b3\u30fc\u30c9 7.1:",source:"@site/i18n/jp/docusaurus-plugin-content-docs/current/chapter7/7_0_circle.md",sourceDirName:"chapter7",slug:"/chapter7/7_0_circle",permalink:"/MathOfRealTimeGraphics-samples/docs/chapter7/7_0_circle",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Chapter 7: Distance and SDF",permalink:"/MathOfRealTimeGraphics-samples/docs/category/chapter-7-distance-and-sdf"},next:{title:"7_1_rectSDF",permalink:"/MathOfRealTimeGraphics-samples/docs/chapter7/7_1_rectSDF"}},l={},p=[{value:"\u56f3 7.2, \u30b3\u30fc\u30c9 7.1:",id:"\u56f3-72-\u30b3\u30fc\u30c9-71",level:2}],u={toc:p};function _(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"7_0_circle"},"7_0_circle"),(0,a.kt)("h2",{id:"\u56f3-72-\u30b3\u30fc\u30c9-71"},"\u56f3 7.2, \u30b3\u30fc\u30c9 7.1:"),(0,a.kt)(c.Z,{fragName:"7_0_circle.frag",fragCode:"#version 300 es\nprecision highp float;\nprecision highp int;\nout vec4 fragColor;\nuniform float u_time;\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nconst float PI = 3.14159265359;\n\nfloat circle(vec2 p, vec2 c, float r){\n  float d = 0.5 + u_mouse.x / u_resolution.x;\n  return pow(dot(p - c, p - c), d) - r;\n}\n\nvec3 contour(float v, float interval){\n  return abs(v) < 0.01 ? vec3(0.0):\n  mod(v, interval) < 0.01 ? vec3(1.0):\n  mix(vec3(0, 0, 1), vec3(1, 0, 0), atan(v) / PI + 0.5);\n}\n\nvoid main(){\n  vec2 pos = (2.0 * gl_FragCoord.xy -u_resolution.xy)/ min(u_resolution.x, u_resolution.y);\n  float interval = 0.3;\n  fragColor.rgb = vec3(contour(circle(pos, vec2(0.0), 1.0), interval));\n  fragColor.a = 1.0;\n}\n",mdxType:"LiveGlslCodeBlock"}))}_.isMDXComponent=!0}}]);