"use strict";(self.webpackChunkMathOfRealTimeGraphics_samples=self.webpackChunkMathOfRealTimeGraphics_samples||[]).push([[8490],{11094:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var i=r(87462),o=(r(67294),r(3905)),a=r(72915);const s={sidebar_position:1},n="8_0_silhouette",c={unversionedId:"chapter8/8_0_silhouette",id:"chapter8/8_0_silhouette",title:"8_0_silhouette",description:"\u30b3\u30fc\u30c9 8.1, 8.2, 8.3:",source:"@site/i18n/jp/docusaurus-plugin-content-docs/current/chapter8/8_0_silhouette.md",sourceDirName:"chapter8",slug:"/chapter8/8_0_silhouette",permalink:"/MathOfRealTimeGraphics-samples/docs/chapter8/8_0_silhouette",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Chapter 8: 3D Rendering",permalink:"/MathOfRealTimeGraphics-samples/docs/category/chapter-8-3d-rendering"},next:{title:"\u554f\u984c 8.1",permalink:"/MathOfRealTimeGraphics-samples/docs/chapter8/exercise_8_1"}},l={},p=[{value:"\u30b3\u30fc\u30c9 8.1, 8.2, 8.3:",id:"\u30b3\u30fc\u30c9-81-82-83",level:2}],u={toc:p};function h(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,i.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"8_0_silhouette"},"8_0_silhouette"),(0,o.kt)("h2",{id:"\u30b3\u30fc\u30c9-81-82-83"},"\u30b3\u30fc\u30c9 8.1, 8.2, 8.3:"),(0,o.kt)(a.Z,{fragName:"8_0_silhouette.frag",fragCode:"#version 300 es\nprecision highp float;\nprecision highp int;\nout vec4 fragColor;\nuniform float u_time;\nuniform vec2 u_resolution;\nvoid main(){\n    vec2 p = (gl_FragCoord.xy * 2.0 - u_resolution) / min(u_resolution.x, u_resolution.y);\n    vec3 cPos = vec3(0.0, 0.0, 0.0);\n    vec3 cDir = vec3(0.0, 0.0, - 1.0);\n    vec3 cUp = vec3(0.0, 1.0, 0.0);\n    vec3 cSide = cross(cDir, cUp);\n    float targetDepth = 1.0;\n    vec3 ray = cSide * p.x + cUp * p.y + cDir * targetDepth;\n    vec3 groundNormal = vec3(0.0, 1.0, 0.0);\n    if (dot(ray, groundNormal) < 0.0){\n        fragColor.rgb = vec3(1.0);\n    } else {\n        fragColor.rgb = vec3(0.0);\n    }\n    fragColor.a = 1.0;\n}",mdxType:"LiveGlslCodeBlock"}))}h.isMDXComponent=!0}}]);