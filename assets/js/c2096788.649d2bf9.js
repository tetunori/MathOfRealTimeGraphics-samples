"use strict";(self.webpackChunkMathOfRealTimeGraphics_samples=self.webpackChunkMathOfRealTimeGraphics_samples||[]).push([[9170],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>m});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),i=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},p=function(e){var n=i(e.components);return t.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=i(r),m=a,v=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return r?t.createElement(v,c(c({ref:n},p),{},{components:r})):t.createElement(v,c({ref:n},p))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var i=2;i<o;i++)c[i]=r[i];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5896:(e,n,r)=>{r.d(n,{Z:()=>o});var t=r(7462),a=r(7294);function o(e){let{baseUrl:n,fragUrl:r,disableFullscreen:o,limitWidth:c,...s}=e;const[l,i]=(0,a.useState)(!1);return a.createElement("div",{className:"glslcanvas-box-wrapper",style:c?{width:c,display:"table",margin:"0 auto"}:{}},!o&&a.createElement("button",{"aria-label":l?"Minimize the example":"Fullscreen the example",className:"glslcanvas-box-fullscreen-toggle",onClick:e=>{const n=e.target.closest(".glslcanvas-box-wrapper");l?document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.msExitFullscreen&&document.msExitFullscreen():n.requestFullscreen?n.requestFullscreen():n.webkitRequestFullscreen?n.webkitRequestFullscreen():n.msRequestFullscreen&&n.msRequestFullscreen(),i(!l)}},l?a.createElement("svg",{"aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",x:"0",y:"0",viewBox:"0 0 24 24"},a.createElement("path",{d:"M19.707 18.293a1 1 0 01-1.414 1.414L16 17.414V18a1 1 0 01-2 0v-3a1 1 0 011-1h3a1 1 0 010 2h-.586zM9 14H6a1 1 0 000 2h.586l-2.293 2.293a1 1 0 001.414 1.414L8 17.414V18a1 1 0 002 0v-3a1 1 0 00-1-1zm0-9a1 1 0 00-1 1v.586L5.707 4.293a1 1 0 00-1.414 1.414L6.586 8H6a1 1 0 000 2h3a1 1 0 001-1V6a1 1 0 00-1-1zm6 5h3a1 1 0 000-2h-.586l2.293-2.293a1 1 0 00-1.414-1.414L16 6.586V6a1 1 0 00-2 0v3a1 1 0 001 1z"})):a.createElement("svg",{"aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",x:"0",y:"0",viewBox:"26 26 48 48"},a.createElement("path",{d:"M54.347 57.882A8.96 8.96 0 0150 59a8.96 8.96 0 01-4.347-1.118L40.736 62.8c-.38.38-.257.701.29.701h.98A2.503 2.503 0 0144.5 66c0 1.39-1.122 2.5-2.507 2.5h-7.986a2.505 2.505 0 01-2.507-2.507v-7.986A2.502 2.502 0 0134 55.5a2.49 2.49 0 012.5 2.493v.98c0 .547.314.678.7.29l4.918-4.916A8.96 8.96 0 0141 50a8.96 8.96 0 011.118-4.347L37.2 40.736c-.38-.38-.701-.257-.701.29v.98A2.503 2.503 0 0134 44.5c-1.39 0-2.5-1.122-2.5-2.507v-7.986a2.505 2.505 0 012.507-2.507h7.986A2.502 2.502 0 0144.5 34a2.49 2.49 0 01-2.493 2.5h-.98c-.547 0-.678.314-.29.7l4.916 4.918A8.96 8.96 0 0150 41a8.96 8.96 0 014.347 1.118l4.917-4.917c.38-.38.257-.701-.29-.701h-.98A2.503 2.503 0 0155.5 34c0-1.39 1.122-2.5 2.507-2.5h7.986a2.505 2.505 0 012.507 2.507v7.986A2.502 2.502 0 0166 44.5a2.49 2.49 0 01-2.5-2.493v-.98c0-.547-.314-.678-.7-.29l-4.918 4.916A8.96 8.96 0 0159 50a8.96 8.96 0 01-1.118 4.347l4.917 4.917c.38.38.701.257.701-.29v-.98A2.503 2.503 0 0166 55.5c1.39 0 2.5 1.122 2.5 2.507v7.986a2.505 2.505 0 01-2.507 2.507h-7.986A2.502 2.502 0 0155.5 66a2.49 2.49 0 012.493-2.5h.98c.547 0 .678-.314.29-.7l-4.916-4.918zM50 54a4 4 0 100-8 4 4 0 000 8z"}))),a.createElement("iframe",(0,t.Z)({width:"100%",frameborder:"0",height:"500px",className:"docus-glslcanvas-box"+(l?" is-fullscreen":""),srcDoc:'\n        <!DOCTYPE html>\n          <html>\n          <head>\n            <meta charset="utf-8">\n            <title>GlslCanvas</title>\n            <link type="text/css" href="'+n+'/css/glsl-canvas.css" rel="stylesheet"/>\n            <script type="text/javascript" src="'+n+'/js/glsl-canvas.min.js"><\/script>\n          </head>\n          <body>\n            <canvas class="glsl-canvas" data-fragment-url="'+n+"/"+r+'"></canvas>\n          </body>\n          <script>\n            var options = {\n              backgroundColor: "rgba(0.0, 0.0, 0.0, 0.0)",\n              alpha: true,\n              antialias: false,\n              premultipliedAlpha: false,\n              preserveDrawingBuffer: false, \n              extensions: [],\n              doubleSided: false,\n            };\n            var canvas = document.querySelector(".glsl-canvas");\n            console.log(canvas);\n            var glsl = new glsl.Canvas(canvas, options);\n            glsl.setUniforms({});\n          <\/script>\n          </html>\n        '},s)))}},5631:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>c,metadata:()=>l,toc:()=>p});var t=r(7462),a=(r(7294),r(3905)),o=r(5896);const c={sidebar_position:13},s="Exercise 9.3-2",l={unversionedId:"chapter9/exercise_9_3-2",id:"chapter9/exercise_9_3-2",title:"Exercise 9.3-2",description:"13 Semi-Regular Polyhedrons:",source:"@site/docs/chapter9/exercise_9_3-2.md",sourceDirName:"chapter9",slug:"/chapter9/exercise_9_3-2",permalink:"/MathOfRealTimeGraphics-samples/docs/chapter9/exercise_9_3-2",draft:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Exercise 9.3-1",permalink:"/MathOfRealTimeGraphics-samples/docs/chapter9/exercise_9_3-1"},next:{title:"9_9_dist",permalink:"/MathOfRealTimeGraphics-samples/docs/chapter9/9_9_dist"}},i={},p=[{value:"13 Semi-Regular Polyhedrons:",id:"13-semi-regular-polyhedrons",level:2},{value:"11 polyhedrons except for snubs",id:"11-polyhedrons-except-for-snubs",level:3},{value:"2 snub polyhedrons",id:"2-snub-polyhedrons",level:3}],d={toc:p};function u(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"exercise-93-2"},"Exercise 9.3-2"),(0,a.kt)("h2",{id:"13-semi-regular-polyhedrons"},"13 Semi-Regular Polyhedrons:"),(0,a.kt)("h3",{id:"11-polyhedrons-except-for-snubs"},"11 polyhedrons except for snubs"),(0,a.kt)("p",null,"Truncated tetrahedron -> Truncated cube -> Truncated octahedron -> Truncated dodecahedron -> Truncated icosahedron -> Cuboctahedron -> Icosidodecahedron -> Rhombicuboctahedron -> Rhombicosidodecahedron -> Truncated cuboctahedron -> Truncated icosidodecahedron"),(0,a.kt)(o.Z,{baseUrl:"/MathOfRealTimeGraphics-samples",fragUrl:"/frags/ch9/exercise_9_3-2-1.frag",mdxType:"GLSLCanvasBox"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-glsl",metastring:'showLineNumbers title="exercise_9_3-2-1.frag"',showLineNumbers:!0,title:'"exercise_9_3-2-1.frag"'},"#version 300 es\nprecision highp float;\nprecision highp int;\nout vec4 fragColor;\nuniform float u_time;\nuniform vec2 u_resolution;\n//begin rot\nvec2 rot2(vec2 p, float t){\n    return vec2(cos(t) * p.x -sin(t) * p.y, sin(t) * p.x + cos(t) * p.y);\n}\nvec3 rotX(vec3 p, float t){\n    return vec3(p.x, rot2(p.yz, t));\n}\nvec3 rotY(vec3 p, float t){\n    return vec3(p.y, rot2(p.zx, t)).zxy;\n}\nvec3 rotZ(vec3 p, float t){\n    return vec3(rot2(p.xy, t), p.z);\n}\nvec3 euler(vec3 p, vec3 t){\n    return rotZ(rotY(rotX(p, t.x), t.y), t.z);\n}\n//end rot\nfloat smin(float d1, float d2, float r){\n    float c = clamp(0.5 + (d2 - d1) * (0.5 / r), 0.0, 1.0);\n    return mix(d2, d1, c) - r * c * (1.0 - c);\n}\n\n// Reference: MIT License Copyright (c) 2018 Mikael Hvidtfeldt Christensen\n// https://github.com/Syntopia/Polytopia/blob/master/polyhedron.glsl\n// https://syntopia.github.io/Polytopia/polytopes.html\n\n#define PI 3.141592\n\nvec3 nc,pNorm,pab,pbc,pca;\nfloat Degree = 5.0;\nfloat V=0., W=1., U = 0.;\nint polyidx = 0;\n\n// degree, v, w, u\nvec4[11] paramArray = vec4[](\n  vec4(3.0, 1.0, 0.0, 1.0), // \u5207\u9802\u56db\u9762\u4f53, Truncated tetrahedron\n  vec4(4.0, 1.0, 0.0, 1.0), // \u5207\u9802\u516d\u9762\u4f53, Truncated cube\n  vec4(4.0, 1.0, 1.0, 0.0), // \u5207\u9802\u516b\u9762\u4f53, Truncated octahedron\n  vec4(5.0, 1.0, 0.0, 1.0), // \u5207\u9802\u5341\u4e8c\u9762\u4f53, Truncated dodecahedron\n  vec4(5.0, 1.0, 1.0, 0.0), // \u5207\u9802\u4e8c\u5341\u9762\u4f53, Truncated icosahedron\n  vec4(4.0, 1.0, 0.0, 0.0), // \u7acb\u65b9\u516b\u9762\u4f53, Cuboctahedron\n  vec4(5.0, 1.0, 0.0, 0.0), // \u4e8c\u5341\u30fb\u5341\u4e8c\u9762\u4f53, Icosidodecahedron\n  vec4(4.0, 0.0, 1.0, 1.0), // \u659c\u65b9\u7acb\u65b9\u516b\u9762\u4f53, Rhombicuboctahedron\n  vec4(5.0, 0.0, 1.0, 1.0), // \u659c\u65b9\u4e8c\u5341\u30fb\u5341\u4e8c\u9762\u4f53, Rhombicosidodecahedron\n  vec4(4.0, 1.0, 1.0, 1.0), // \u659c\u65b9\u5207\u9802\u7acb\u65b9\u516b\u9762\u4f53, Truncated cuboctahedron\n  vec4(5.0, 1.0, 1.0, 1.0) // \u659c\u65b9\u5207\u9802\u4e8c\u5341\u30fb\u5341\u4e8c\u9762\u4f53, Truncated icosidodecahedron\n  // \u5909\u5f62\u7acb\u65b9\u4f53\u3001\u5909\u5f62\u5341\u4e8c\u9762\u4f53\u306f\u3053\u306e\u5f62\u3067\u306f\u4f5c\u308c\u306a\u3044\u3002\n);\n\nvoid init( int idx ) {\n  vec4 param = paramArray[idx];\n  Degree = param.x;\n  V = param.y;\n  W = param.z;\n  U = param.w;\n\n    float cospin=cos(PI/Degree), scospin=sqrt(0.75-cospin*cospin);\n    nc=vec3(-0.5,-cospin,scospin);\n    pab=vec3(0.,0.,1.);\n    pbc=vec3(scospin,0.,0.5);\n    pca=vec3(0.,scospin,cospin);\n\n    pNorm=normalize((V*pab+W*pbc+U*pca));\n    pbc=normalize(pbc);\n    pca=normalize(pca);\n}\n\nvec3 fold(vec3 pos) {\n    int max = 5; //int(Degree);\n    for(int i=0;i<7;i++){\n        pos.xy=abs(pos.xy);\n        float t=-2.*min(0.,dot(pos,nc));\n        pos+=t*nc;\n        if (i>=max) break;\n    }\n    return pos;\n}\n\nfloat D2Planes(vec3 pos) {\n    float d0=dot(pos,pab)-dot(pab,pNorm);\n    float d1=dot(pos,pbc)-dot(pbc,pNorm);\n    float d2=dot(pos,pca)-dot(pca,pNorm);\n    \n    return abs(max(max(d0,d1),d2));\n}\n\nfloat regularPolyhedronSDF(vec3 pos, int idx, float s){\n  init(idx);\n  vec3 oPos = pos;\n    pos=fold(pos);\n    float d=10000.;\n    d=min(d,D2Planes(pos));\n    return d;\n}\n\nfloat sceneSDF(vec3 p){\n  return regularPolyhedronSDF(p, polyidx, 0.5);\n}\n\nvec3 gradSDF(vec3 p){\n  float eps = 0.003;\n  return normalize(vec3(\n      sceneSDF(p + vec3(eps, 0.0, 0.0)) - sceneSDF(p - vec3(eps, 0.0, 0.0)),\n      sceneSDF(p + vec3(0.0, eps, 0.0)) - sceneSDF(p - vec3(0.0, eps, 0.0)),\n      sceneSDF(p + vec3(0.0, 0.0, eps)) - sceneSDF(p - vec3(0.0, 0.0, eps))\n  ));\n}\n\nvoid main(){\n    vec2 p = (gl_FragCoord.xy * 2.0 - u_resolution) / min(u_resolution.x, u_resolution.y);\n    \n    vec3 t = 2.0 + vec3(u_time * 0.5);\n    vec3 cPos = euler(vec3(0.0, 0.0, 2.0), t);\n    vec3 cDir = euler(vec3(0.0, 0.0, -1.0), t);\n    vec3 cUp = euler(vec3(0.0, 1.0, 0.0), t);\n    vec3 cSide = cross(cDir, cUp);\n    \n    float targetDepth = 1.0;\n    \n    vec3 lDir = euler(vec3(0.0, 0.0, 1.0), t);\n\n    float sec = 6.0;\n    polyidx = int(floor(mod(float(u_time),11.0*sec)/sec));\n\n    vec3 ray = cSide * p.x + cUp * p.y + cDir * targetDepth;\n    vec3 rPos = ray + cPos;\n    ray = normalize(ray);\n    fragColor.rgb = vec3(0.078, 0.129, 0.239);\n    for(int i = 0; i < 50; i ++ ){\n        if (sceneSDF(rPos) > 0.001){\n            rPos += sceneSDF(rPos) * ray;\n        } else {\n            float amb = 0.1;\n            float diff = 0.9 * max(dot(normalize(lDir), gradSDF(rPos)), 0.0);\n            vec3 col = vec3(0.988, 0.639, 0.067);\n            fragColor.rgb = col * (diff + amb);\n            break;\n        }\n    }\n    fragColor.a = 1.0;\n}\n")),(0,a.kt)("h3",{id:"2-snub-polyhedrons"},"2 snub polyhedrons"),(0,a.kt)("p",null,"(Not Yet...)\nSnub cube -> Snub dodecahedron"),(0,a.kt)(o.Z,{baseUrl:"/MathOfRealTimeGraphics-samples",fragUrl:"/frags/ch9/exercise_9_3-2-2.frag",mdxType:"GLSLCanvasBox"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-glsl",metastring:'showLineNumbers title="exercise_9_3-2-2.frag"',showLineNumbers:!0,title:'"exercise_9_3-2-2.frag"'},"Not yet...\n")))}u.isMDXComponent=!0}}]);