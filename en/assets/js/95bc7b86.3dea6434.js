"use strict";(self.webpackChunkMathOfRealTimeGraphics_samples=self.webpackChunkMathOfRealTimeGraphics_samples||[]).push([[2543],{71300:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>u,contentTitle:()=>r,default:()=>p,frontMatter:()=>f,metadata:()=>s,toc:()=>c});var t=e(87462),o=(e(67294),e(3905)),a=e(72915);const f={sidebar_position:5},r="4_4_pnoise",s={unversionedId:"chapter4/4_4_pnoise",id:"chapter4/4_4_pnoise",title:"4_4_pnoise",description:"Code 4.6, 4.7, Figure 4.7:",source:"@site/docs/chapter4/4_4_pnoise.md",sourceDirName:"chapter4",slug:"/chapter4/4_4_pnoise",permalink:"/MathOfRealTimeGraphics-samples/en/docs/chapter4/4_4_pnoise",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"4_3_noiseQuality",permalink:"/MathOfRealTimeGraphics-samples/en/docs/chapter4/4_3_noiseQuality"},next:{title:"Exercise 4.1",permalink:"/MathOfRealTimeGraphics-samples/en/docs/chapter4/exercise_4_1"}},u={},c=[{value:"Code 4.6, 4.7, Figure 4.7:",id:"code-46-47-figure-47",level:2}],v={toc:c};function p(n){let{components:i,...e}=n;return(0,o.kt)("wrapper",(0,t.Z)({},v,e,{components:i,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"4_4_pnoise"},"4_4_pnoise"),(0,o.kt)("h2",{id:"code-46-47-figure-47"},"Code 4.6, 4.7, Figure 4.7:"),(0,o.kt)(a.Z,{fragName:"4_4_pnoise.frag",fragCode:"#version 300 es\nprecision highp float;\nprecision highp int;\nout vec4 fragColor;\nuniform float u_time;\nuniform vec2 u_resolution;\nivec2 channel;\n\n//start hash\nuvec3 k = uvec3(0x456789abu, 0x6789ab45u, 0x89ab4567u);\nuvec3 u = uvec3(1, 2, 3);\nconst uint UINT_MAX = 0xffffffffu;\n\nuint uhash11(uint n){\n  n ^= (n << u.x);\n  n ^= (n >> u.x);\n  n *= k.x;\n  n ^= (n << u.x);\n  return n * k.x;\n}\n\nuvec2 uhash22(uvec2 n){\n  n ^= (n.yx << u.xy);\n  n ^= (n.yx >> u.xy);\n  n *= k.xy;\n  n ^= (n.yx << u.xy);\n  return n * k.xy;\n}\n\nuvec3 uhash33(uvec3 n){\n  n ^= (n.yzx << u);\n  n ^= (n.yzx >> u);\n  n *= k;\n  n ^= (n.yzx << u);\n  return n * k;\n}\n\nfloat hash11(float p){\n  uint n = floatBitsToUint(p);\n  return float(uhash11(n)) / float(UINT_MAX);\n}\n\nfloat hash21(vec2 p){\n  uvec2 n = floatBitsToUint(p);\n  return float(uhash22(n).x) / float(UINT_MAX);\n}\n\nfloat hash31(vec3 p){\n  uvec3 n = floatBitsToUint(p);\n  return float(uhash33(n).x) / float(UINT_MAX);\n}\n\nvec2 hash22(vec2 p){\n  uvec2 n = floatBitsToUint(p);\n  return vec2(uhash22(n)) / vec2(UINT_MAX);\n}\n\nvec3 hash33(vec3 p){\n  uvec3 n = floatBitsToUint(p);\n  return vec3(uhash33(n)) / vec3(UINT_MAX);\n}\n//end hash\n\n//start gnoise\nfloat gnoise21(vec2 p){\n  vec2 n = floor(p);\n  vec2[4] g;\n  for (int j = 0; j < 2; j ++){\n    for (int i = 0; i < 2; i++){\n      g[i+2*j] = normalize(hash22(n + vec2(i,j)) - vec2(0.5));\n    }\n  }\n  vec2 f = fract(p);\n  float[4] v;\n  for (int j = 0; j < 2; j ++){\n    for (int i = 0; i < 2; i++){\n      v[i+2*j] = dot(g[i+2*j], f - vec2(i, j));\n    }\n  }\n  f = f * f * f * (10.0 - 15.0 * f + 6.0 * f * f);\n  return 0.5 * mix(mix(v[0], v[1], f[0]), mix(v[2], v[3], f[0]), f[1]) + 0.5;\n}\n\nfloat gnoise31(vec3 p){\n  vec3 n = floor(p);\n  vec3[8] g;\n  for (int k = 0; k < 2; k++ ){\n    for (int j = 0; j < 2; j++ ){\n      for (int i = 0; i < 2; i++){\n        g[i+2*j+4*k] = normalize(hash33(n + vec3(i, j, k)) - vec3(0.5));\n      }\n    }\n  }\n  vec3 f = fract(p);\n  float[8] v;\n  for (int k = 0; k < 2; k++ ){\n    for (int j = 0; j < 2; j++ ){\n      for (int i = 0; i < 2; i++){\n        v[i+2*j+4*k] = dot(g[i+2*j+4*k], f - vec3(i, j, k));\n      }\n    }\n  }\n  f = f * f * f * (10.0 - 15.0 * f + 6.0 * f * f);\n  float[2] w;\n  for (int i = 0; i < 2; i++){\n    w[i] = mix(mix(v[4*i], v[4*i+1], f[0]), mix(v[4*i+2], v[4*i+3], f[0]), f[1]);\n  }\n  return 0.5 * mix(w[0], w[1], f[2]) + 0.5;\n}\n//end gnoise\n\n//start pnoise\nfloat gtable2(vec2 lattice, vec2 p){\n  uvec2 n = floatBitsToUint(lattice);\n  uint ind = uhash22(n).x >> 29;\n  float u = 0.92387953 * (ind < 4u ? p.x : p.y);  //0.92387953 = cos(pi/8)\n  float v = 0.38268343 * (ind < 4u ? p.y : p.x);  //0.38268343 = sin(pi/8)\n  return ((ind & 1u) == 0u ? u : -u) + ((ind & 2u) == 0u? v : -v);\n}\n\nfloat pnoise21(vec2 p){\n  vec2 n = floor(p);\n  vec2 f = fract(p);\n  float[4] v;\n  for (int j = 0; j < 2; j ++){\n    for (int i = 0; i < 2; i++){\n      v[i+2*j] = gtable2(n + vec2(i, j), f - vec2(i, j));\n    }\n  }\n  f = f * f * f * (10.0 - 15.0 * f + 6.0 * f * f);\n  return 0.5 * mix(mix(v[0], v[1], f[0]), mix(v[2], v[3], f[0]), f[1]) + 0.5;\n}\n\nfloat gtable3(vec3 lattice, vec3 p){\n  uvec3 n = floatBitsToUint(lattice);\n  uint ind = uhash33(n).x >> 28;\n  float u = ind < 8u ? p.x : p.y;\n  float v = ind < 4u ? p.y : ind == 12u || ind == 14u ? p.x : p.z;\n  return ((ind & 1u) == 0u? u: -u) + ((ind & 2u) == 0u? v : -v);\n}\n\nfloat pnoise31(vec3 p){\n  vec3 n = floor(p);\n  vec3 f = fract(p);\n  float[8] v;\n  for (int k = 0; k < 2; k++ ){\n    for (int j = 0; j < 2; j++ ){\n      for (int i = 0; i < 2; i++){\n        v[i+2*j+4*k] = gtable3(n + vec3(i, j, k), f - vec3(i, j, k)) * 0.70710678;\n      }\n    }\n  }\n  f = f * f * f * (10.0 - 15.0 * f + 6.0 * f * f);\n  float[2] w;\n  for (int i = 0; i < 2; i++){\n    w[i] = mix(mix(v[4*i], v[4*i+1], f[0]), mix(v[4*i+2], v[4*i+3], f[0]), f[1]);\n  }\n  return 0.5 * mix(w[0], w[1], f[2]) + 0.5;\n}\n//end pnoise\n\nvoid main(){\n  vec2 pos = gl_FragCoord.xy/min(u_resolution.x, u_resolution.y);\n  pos = 10.0 * pos + u_time;\n  channel = ivec2(2.0 * gl_FragCoord.xy / u_resolution.xy);\n  float v = channel[0] == 0 ? \n    channel[1] == 0 ? gnoise21(pos) :\n    gnoise31(vec3(pos, u_time)) :\n    channel[1] == 0 ? pnoise21(pos) : \n    pnoise31(vec3(pos, u_time));\n  fragColor.rgb = vec3(v);\n  fragColor.a = 1.0;\n}",mdxType:"LiveGlslCodeBlock"}))}p.isMDXComponent=!0}}]);