"use strict";(self.webpackChunkMathOfRealTimeGraphics_samples=self.webpackChunkMathOfRealTimeGraphics_samples||[]).push([[8559],{17110:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>p,contentTitle:()=>c,default:()=>v,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=t(87462),a=(t(67294),t(3905)),r=t(72915);const i={sidebar_position:2},c="9_1_boolOp2d",l={unversionedId:"chapter9/9_1_boolOp2d",id:"chapter9/9_1_boolOp2d",title:"9_1_boolOp2d",description:"Figure 9.2:",source:"@site/docs/chapter9/9_1_boolOp2d.md",sourceDirName:"chapter9",slug:"/chapter9/9_1_boolOp2d",permalink:"/MathOfRealTimeGraphics-samples/en/docs/chapter9/9_1_boolOp2d",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"9_0_boolOp3d",permalink:"/MathOfRealTimeGraphics-samples/en/docs/chapter9/9_0_boolOp3d"},next:{title:"9_2_morphing",permalink:"/MathOfRealTimeGraphics-samples/en/docs/chapter9/9_2_morphing"}},p={},s=[{value:"Figure 9.2:",id:"figure-92",level:2}],d={toc:s};function v(e){let{components:o,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,t,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"9_1_boolop2d"},"9_1_boolOp2d"),(0,a.kt)("h2",{id:"figure-92"},"Figure 9.2:"),(0,a.kt)(r.Z,{fragName:"9_1_boolOp2d.frag",fragCode:"#version 300 es\nprecision highp float;\nout vec4 fragColor;\nuniform float u_time;\nuniform vec2 u_resolution;\nconst float PI = 3.14159265359;\nfloat rectSDF(vec2 p, vec2 c, vec2 d){\n    p = abs(p - c);\n    return length(max(p - d, vec2(0.0))) + min(max(p.x - d.x, p.y - d.y), 0.0);\n}\nfloat circleSDF(vec2 p, vec2 c, float r){\n    return length(p - c) - r;\n}\nvec3 contour(float v, float interval){\n    return abs(v) < 0.01 ? vec3(0.0):\n    mod(v, interval) < 0.01 ? vec3(1.0):\n    mix(vec3(0, 0, 1), vec3(1, 0, 0), atan(v) / PI + 0.5);\n}\nvoid main(){\n    vec2 pos = (2.0 * gl_FragCoord.xy -u_resolution.xy)/ u_resolution.yy;\n    float v1 = circleSDF(pos, vec2(0.2), 0.4);\n    float v2 = rectSDF(pos, vec2(-0.2), vec2(0.4));\n    float v = int(u_time) % 3 == 0 ? max(v1, v2):\n        int(u_time)% 3 == 1 ? min(v1, v2):\n        max(v1, -v2);\n    fragColor = vec4(contour(v, 0.1), 1.0);\n}\n",mdxType:"LiveGlslCodeBlock"}))}v.isMDXComponent=!0}}]);